    //TODO clean your code and use the correct name for the method and the attrubites and the like for the Postmapping and the RequestMapping
    // jsut make better names
    //todo SO WHAT THIS CONTROLLER WILL DO IS will have  A DIFFERENT attrubties the double EndWeight is the new attributes
    // this is just a fake values you give for the truck Weight by it self with out the MMaterials.
    // like you say in the (weighTruckIn) Method you send the (double startWeight) let say its  50tons for Example
    // now you say ok in the when the truck leaves  calling the (weighTruckOut) using a API call  the double EndWeight is like 4tons this is a fake value you can say it.
    // then you would go to the landslide you call a method to get the WBT ticket based on the weighBridgeTicketId and correct the it or aka just adding the attrubties EndWeigth to it.
    // and may like add extra Attribute like call it the material i deliver this is just the material without the truck NOTEEEEEEEEe this line is (optional)
    // now you have all the info for the truck Weight and the Material Weight now you create an other event of the WeighInEvent with the material Weight ONLY aka the endWeight publish that event to the warehouse and than there correct the Event in the warehouse you gave a value of 0 for the Weight  and you are done
    // very important read the doc of the porject beusee there is some stuff you need to fix that i missed like read the user story and go over your code and read the lanside and go over your code and you are done .
    // one question to the teacher for the EndWeight is it always the same or its random or is there some rules

    //TODO   Change the licensePlate from string to UUID
    // Todo check if the user has any waerhouse for that Mat type and if if he dont have one check if he has < than 4 so that you can tell the waerhouse create him one.



    double materialWeight = command.startWeight() - command.endWeight();
======================================
stuff i need to do:
=======================
As a warehouse manager, I want to check if trucks arrive within the scheduled arrival
windows. Includes UI;

Lists of trucks (appoinments) for the current date with details like arrival window, seller,
status, license plate, mineral type,.... Trucks that are delayed are visually highlighted.
Another date can be picked.

=======================

● As a warehouse manager, I want to know how many trucks are on site so that in case of
emergency I know if there is anyone on site or not. Includes UI

for this user Story you dont need to create any class

you only need a controller and UseCase make new ones. that returns you data like a list about the trucks that are on site.
what i mean you return a list of all the trucks that are in the warehouse that did not leave yet.
what kind of data?
=======================

so what i need to do for this use story
● As a buyer, I want to send a PO to KDG to make sure they can expect a shipment soon.
is just make a api that tha recive data and create a PurchaseOrder and save it in the database.


so i PurchaseOrder is used when the seller try to store Mat so you make one when you want to Deliver to the warehouse . and also its used when the Ship try to like take matriles from the warehouse we look at the PurchaseOrder to see what can we give and also can we give it.
